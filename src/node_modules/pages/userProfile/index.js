import { useEffect } from "react";
import {
  Link,
  NavLink
} from "react-router-dom";

import useFetch from 'hooks/useFetch';
import useCheckIsAuthor from 'hooks/useCheckIsAuthor';
import UserArticles from 'pages/userProfile/components/userArticles';
import SubscribeOnUser from 'components/subscribeOnUser';

const UserProfile = ({ location, match }) => {
  const slug = match.params.slug;
  const isFavorites = location.pathname.includes('favorites');
  const apiUrl = `/profiles/${slug}`;
  const [{ response }, doFetch] = useFetch(apiUrl);
  const isAuthor = useCheckIsAuthor(response
    ? response.profile.username
    : null
  );

  useEffect(() => {
    doFetch();
  }, [doFetch]);

  if (!response) {
    return null;
  }

  return (
    <div className='profile-page'>
      <div className='user-info'>
        <div className='container'>
          <div className='row'>
            <div className='col-xs-12 col-md-10 offset-md-1'>
              <img className='user-img' src={response.profile.image} alt='' />
              <h4>{response.profile.username}</h4>
              <p>{response.profile.bio}</p>
              {isAuthor ? (
                <Link
                  to='/settings'
                  className='btn btn-sm btn-outline-secondary action-btn'
                >
                  <i className="ion-gear-a" />
                  &nbsp; Edit Profile Settings
                </Link>
              ) : (
                <SubscribeOnUser
                  username={response.profile.username}
                  isFollowing={response.profile.following}
                />
              )}
            </div>
          </div>
        </div>
      </div>
      <div className='container'>
        <div className='row'>
          <div className='col-xs-12 col-md-10 offset-md-1'>
            <div className='articles-toggle'>
              <ul className='nav nav-pills outline-active'>
                <li className='nav-item'>
                  <NavLink
                    exact
                    to={`/profiles/${response.profile.username}`}
                    className='nav-link'
                  >
                    My posts
                  </NavLink>
                </li>
                <li className='nav-item'>
                  <NavLink
                    to={`/profiles/${response.profile.username}/favorites`}
                    className='nav-link'
                  >
                    Favorites post
                  </NavLink>
                </li>
              </ul>
            </div>
            <UserArticles
              username={response.profile.username}
              location={location}
              isFavorites={isFavorites}
              url={match.url}
            />
          </div>
        </div>
      </div>
    </div>
  );
};

export default UserProfile;