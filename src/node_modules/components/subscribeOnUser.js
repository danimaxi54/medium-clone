import { useContext } from "react";
import classNames from "classnames";

import useFetch from 'hooks/useFetch'
import { CurrentUserContext } from 'contexts/currentUser';

const SubscribeOnUser = ({ slug = '', username, isFollowing, }) => {
  const apiUrl = `/profiles/${username}/follow`;
  const [{ response, isLoading }, doFetch] = useFetch(apiUrl);
  const [currentUserState] = useContext(CurrentUserContext);
  const usernameWithResponse = response
    ? response.profile.username
    : username;
  const isFollowingWithResponse = response
    ? response.profile.following
    : isFollowing;
  const buttonClasses = classNames({
    'btn': true,
    'btn-sm': true,
    'action-btn': true,
    'btn-outline-secondary': isFollowingWithResponse,
    'btn-secondary': !isFollowingWithResponse,
  });

  const handleSubscribe = () => {
    if (!currentUserState.isLoggedIn) {
      window.location.href = '/login';

      return;
    }

    doFetch({
      method: isFollowingWithResponse ? 'delete' : 'post',
    });
  };

  return (
    <button
      className={buttonClasses}
      disabled={isLoading}
      onClick={handleSubscribe}
    >
      <i className="ion-plus-round" />
      &nbsp;
      <span>
        {isFollowingWithResponse || !currentUserState.isLoggedIn
          ? 'Follow'
          : 'Unfollow'} {' '}
        {usernameWithResponse}
      </span>
    </button>
  );
};

export default SubscribeOnUser;